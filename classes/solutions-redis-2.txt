Exercise 2HSET trip:1 user "Alice Brown" mode_of_transport "car" city "Rome" duration 3 HSET trip:2 user "Alice Brown" mode_of_transport "car" city "Venice" duration 2 HSET trip:3 user "Alice Brown" mode_of_transport "car" city "Milan" duration 3GEOADD cities 12.4964 41.9028 "Rome" 12.3155 45.4408 "Venice" 9.1900 45.4642 "Milan"GEODIST cities Rome Venice km GEODIST cities Venice Milan km Exercise 5HSET username:movie:11002 title "Star Wars: Episode V - The Empire Strikes Back" plot "Luke Skywalker begins Jedi training with Yoda." release_year 1980 genre "Action" rating 8.7 votes 1127635 HSET username:movie:11003 title "The Godfather" plot "The aging patriarch of an organized crime dynasty transfers control of his empire to his son." release_year 1972 genre "Drama" rating 9.2 votes 1563839FT.CREATE idx:username:movie ON hash PREFIX 1 "username:movie:" SCHEMA title TEXT SORTABLE plot TEXT release_year NUMERIC SORTABLE genre TAG SORTABLE rating NUMERIC SORTABLE votes NUMERIC SORTABLEFT.SEARCH idx:username:movie "war" RETURN 3 title release_year ratingExercise 6HSET username:book:1 title "To Kill a Mockingbird" author "Harper Lee" genre "Fiction" publication_year 1960 HSET username:book:2 title "1984" author "George Orwell" genre "Dystopian" publication_year 1949 HSET username:book:3 title "Moby-Dick" author "Herman Melville" genre "Adventure" publication_year 1851FT.CREATE idx:username:book ON hash PREFIX 1 "username:book:" SCHEMA title TEXT SORTABLE author TEXT SORTABLE genre TAG SORTABLE publication_year NUMERIC SORTABLEFT.SEARCH idx:username:book "@genre:{Fiction}"FT.SEARCH idx:username:book "@publication_year:[1900 1999]" RETURN 4 title author genre publication_yearExercise 7HSET username:restaurant:1 name "Restaurant A" lat 48.8584 lon 2.2945 cuisine "Italian" HSET username:restaurant:2 name "Restaurant B" lat 40.6892 lon -74.0445 cuisine "French" HSET username:restaurant:3 name "Restaurant C" lat 51.5074 lon -0.1278 cuisine "British" HSET username:restaurant:4 name "Restaurant D" lat 34.0522 lon -118.2437 cuisine "American" HSET username:restaurant:5 name "Restaurant E" lat 35.6895 lon 139.6917 cuisine "Japanese"FT.CREATE user_idx ON hash PREFIX 1 "restaurant:" SCHEMA cuisine TEXT1)all restaurants that serve "Italian" cuisineFT.SEARCH user_idx "Italian”3) count the number of restaurants for each type of cuisineFT.AGGREGATE user_idx:restaurant "*" GROUPBY 1 @cuisine REDUCE COUNT 0 AS num_restaurants2) all restaurants within a 1000 km radius of a given point (48.8584 latitude and 2.2945 longitude) GEOADD username:locations 2.2945 48.8584 restaurant:1 GEOADD username:locations -74.0445 40.6892 restaurant:2 GEOADD username:locations -0.1278 51.5074 restaurant:3 GEOADD username:locations -118.2437 34.0522 restaurant:4 GEOADD username:locations 139.6917 35.6895 restaurant:5Find all restaurants within a 1000 km radius of a given point GEORADIUS username:locations 2.2945 48.8584 1000 kmExercise 8HSET username:book:1 title "Book A" author "Author 1" genre "Fiction" price 10 rating 4.5 HSET username:book:2 title "Book B" author "Author 2" genre "Horror" price 15 rating 4.0 HSET username:book:3 title "Book C" author "Author 1" genre "Fiction" price 12 rating 4.7 HSET username:book:4 title "Book D" author "Author 3" genre "Fiction" price 8 rating 3.9 HSET username:book:5 title "Book E" author "Author 2" genre "Horror" price 20 rating 4.8FT.CREATE user_idx1 ON hash PREFIX 1 "username:book:" SCHEMA genre TEXT author TEXT 1) Count the number of books for each genre FT.AGGREGATE user_idx1 "*" GROUPBY 1 @genre REDUCE COUNT 0 AS count 2) Count the number of books for each author FT.AGGREGATE user_idx1 "*" GROUPBY 1 @author REDUCE COUNT 0 AS count3) Count the number of fiction books for each author FT.AGGREGATE user_idx1 "@genre:Fiction" GROUPBY 1 @author REDUCE COUNT 0 AS count4) Count the number of books for each combination of author and genre FT.AGGREGATE user_idx1 "*" GROUPBY 2 @author @genre REDUCE COUNT 0 AS countExercise 9Create a search index for the genre, author, price, and rating FT.CREATE user_idx2 ON hash PREFIX 1 "username:book:" SCHEMA genre TEXT author TEXT price NUMERIC rating NUMERIC1) Calculate the total price of all books.FT.AGGREGATE user_idx2 "*" GROUPBY 0 REDUCE SUM 1 @price AS total_price 2) Calculate the average rating of all books.FT.AGGREGATE user_idx2 "*" GROUPBY 0 REDUCE AVG 1 @rating AS average_rating3) Find the minimum and maximum price for all books.FT.AGGREGATE user_idx2 "*" GROUPBY 0 REDUCE MIN 1 @price AS min_price REDUCE MAX 1 @price AS max_price4) Calculate the average rating and count of books for each author.FT.AGGREGATE user_idx2 "*" GROUPBY 1 @author REDUCE AVG 1 @rating AS average_rating REDUCE COUNT 0 AS count5) Find books with a rating greater than 4 and sort them by authorFT.CREATE user_idx3 ON HASH PREFIX 1 "username:book:" SCHEMA title TEXT SORTABLE author TEXT SORTABLE genre TEXT SORTABLE price NUMERIC SORTABLE rating NUMERIC SORTABLEFT.SEARCH user_idx3 "@rating:[4.01 inf]" RETURN 5 title author genre price rating SORTBY author6) Define books in the "Fiction" genre with a price greater than or equal to 10.FT.SEARCH user_idx3 "@genre:Fiction @price:[10 inf]" RETURN 5 title author genre price ratingExercise 10JSON.SET username:user:1 . '{"name": "Alice Brown", "email": "alice.brown@email.com", "journeys": [{"year": 2015, "places": [{"country": "Italy", "city": "Roma"}, {"country": "Italy", "city": "Milan"}, {"country": "Italy", "city": "Venice"}]}, {"year": 2016, "places": [{"country": "Polland", "city": "Warsaw"}, {"country": "Polland", "city": "Krakov"}, {"country": "Czech Republic", "city": "Prague"}, {"country": "Czech Republic", "city": "Brno"}]}]}'JSON.SET username:user:2 . '{"name": "Alex Fisher", "journeys": [{"year": 2016, "places": [{"country": "Germany", "city": "Berlin"}, {"country": "Germany", "city": "Erfurt"}, {"country": "Germany", "city": "Koln"}]}]}'JSON.SET username:user:3 . '{"name": "Betty Fox", "email": "bet.fox@email.com", "journeys": [ {"year": 2015, "places": [{"city":"Istanbul"}]}, {"year": 2017, "places":[ { "city":"Roma"}] }]}'FT.CREATE user_idx4 ON JSON PREFIX 1 "username:user:" SCHEMA $.name AS name TEXT $.journeys[*].year AS journey_year NUMERIC $.journeys[*].places[*].country AS place_country TEXT $.journeys[*].places[*].city AS place_city TEXT1) Find all users who have visited Roma.FT.SEARCH user_idx4 "@place_city:Roma"2) Find all users who have visited Italy.FT.SEARCH user_idx4 "@place_country:Italy"3) Find all users who have traveled in the year 2016.FT.SEARCH user_idx4 "@journey_year:[2016 2016]"4) Find all users with the name 'Alice Brown'.FT.SEARCH user_idx4 "@name:\"Alice Brown\""5) Count the number of users who have visited Italy.FT.AGGREGATE user_idx4 "@place_country:Italy" GROUPBY 1 @place_country REDUCE COUNT 0 AS count